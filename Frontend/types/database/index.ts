/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/employees": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.employees.id"];
          created_at?: parameters["rowFilter.employees.created_at"];
          store_id?: parameters["rowFilter.employees.store_id"];
          pin?: parameters["rowFilter.employees.pin"];
          name?: parameters["rowFilter.employees.name"];
          is_active?: parameters["rowFilter.employees.is_active"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["employees"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** employees */
          employees?: definitions["employees"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.employees.id"];
          created_at?: parameters["rowFilter.employees.created_at"];
          store_id?: parameters["rowFilter.employees.store_id"];
          pin?: parameters["rowFilter.employees.pin"];
          name?: parameters["rowFilter.employees.name"];
          is_active?: parameters["rowFilter.employees.is_active"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.employees.id"];
          created_at?: parameters["rowFilter.employees.created_at"];
          store_id?: parameters["rowFilter.employees.store_id"];
          pin?: parameters["rowFilter.employees.pin"];
          name?: parameters["rowFilter.employees.name"];
          is_active?: parameters["rowFilter.employees.is_active"];
        };
        body: {
          /** employees */
          employees?: definitions["employees"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/items_out": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.items_out.id"];
          date_out?: parameters["rowFilter.items_out.date_out"];
          item_id?: parameters["rowFilter.items_out.item_id"];
          count?: parameters["rowFilter.items_out.count"];
          transaction?: parameters["rowFilter.items_out.transaction"];
          amount?: parameters["rowFilter.items_out.amount"];
          employee_id?: parameters["rowFilter.items_out.employee_id"];
          store_id?: parameters["rowFilter.items_out.store_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["items_out"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** items_out */
          items_out?: definitions["items_out"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.items_out.id"];
          date_out?: parameters["rowFilter.items_out.date_out"];
          item_id?: parameters["rowFilter.items_out.item_id"];
          count?: parameters["rowFilter.items_out.count"];
          transaction?: parameters["rowFilter.items_out.transaction"];
          amount?: parameters["rowFilter.items_out.amount"];
          employee_id?: parameters["rowFilter.items_out.employee_id"];
          store_id?: parameters["rowFilter.items_out.store_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.items_out.id"];
          date_out?: parameters["rowFilter.items_out.date_out"];
          item_id?: parameters["rowFilter.items_out.item_id"];
          count?: parameters["rowFilter.items_out.count"];
          transaction?: parameters["rowFilter.items_out.transaction"];
          amount?: parameters["rowFilter.items_out.amount"];
          employee_id?: parameters["rowFilter.items_out.employee_id"];
          store_id?: parameters["rowFilter.items_out.store_id"];
        };
        body: {
          /** items_out */
          items_out?: definitions["items_out"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/item_images": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.item_images.id"];
          created_at?: parameters["rowFilter.item_images.created_at"];
          image_url?: parameters["rowFilter.item_images.image_url"];
          item_id?: parameters["rowFilter.item_images.item_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["item_images"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** item_images */
          item_images?: definitions["item_images"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.item_images.id"];
          created_at?: parameters["rowFilter.item_images.created_at"];
          image_url?: parameters["rowFilter.item_images.image_url"];
          item_id?: parameters["rowFilter.item_images.item_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.item_images.id"];
          created_at?: parameters["rowFilter.item_images.created_at"];
          image_url?: parameters["rowFilter.item_images.image_url"];
          item_id?: parameters["rowFilter.item_images.item_id"];
        };
        body: {
          /** item_images */
          item_images?: definitions["item_images"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/units": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.units.id"];
          created_at?: parameters["rowFilter.units.created_at"];
          name?: parameters["rowFilter.units.name"];
          description?: parameters["rowFilter.units.description"];
          store_id?: parameters["rowFilter.units.store_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["units"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** units */
          units?: definitions["units"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.units.id"];
          created_at?: parameters["rowFilter.units.created_at"];
          name?: parameters["rowFilter.units.name"];
          description?: parameters["rowFilter.units.description"];
          store_id?: parameters["rowFilter.units.store_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.units.id"];
          created_at?: parameters["rowFilter.units.created_at"];
          name?: parameters["rowFilter.units.name"];
          description?: parameters["rowFilter.units.description"];
          store_id?: parameters["rowFilter.units.store_id"];
        };
        body: {
          /** units */
          units?: definitions["units"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/items_in": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.items_in.id"];
          date_in?: parameters["rowFilter.items_in.date_in"];
          item_id?: parameters["rowFilter.items_in.item_id"];
          count?: parameters["rowFilter.items_in.count"];
          store_id?: parameters["rowFilter.items_in.store_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["items_in"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** items_in */
          items_in?: definitions["items_in"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.items_in.id"];
          date_in?: parameters["rowFilter.items_in.date_in"];
          item_id?: parameters["rowFilter.items_in.item_id"];
          count?: parameters["rowFilter.items_in.count"];
          store_id?: parameters["rowFilter.items_in.store_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.items_in.id"];
          date_in?: parameters["rowFilter.items_in.date_in"];
          item_id?: parameters["rowFilter.items_in.item_id"];
          count?: parameters["rowFilter.items_in.count"];
          store_id?: parameters["rowFilter.items_in.store_id"];
        };
        body: {
          /** items_in */
          items_in?: definitions["items_in"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/transactions": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.transactions.id"];
          created_at?: parameters["rowFilter.transactions.created_at"];
          customer?: parameters["rowFilter.transactions.customer"];
          discount?: parameters["rowFilter.transactions.discount"];
          payment_method?: parameters["rowFilter.transactions.payment_method"];
          store_id?: parameters["rowFilter.transactions.store_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["transactions"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** transactions */
          transactions?: definitions["transactions"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.transactions.id"];
          created_at?: parameters["rowFilter.transactions.created_at"];
          customer?: parameters["rowFilter.transactions.customer"];
          discount?: parameters["rowFilter.transactions.discount"];
          payment_method?: parameters["rowFilter.transactions.payment_method"];
          store_id?: parameters["rowFilter.transactions.store_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.transactions.id"];
          created_at?: parameters["rowFilter.transactions.created_at"];
          customer?: parameters["rowFilter.transactions.customer"];
          discount?: parameters["rowFilter.transactions.discount"];
          payment_method?: parameters["rowFilter.transactions.payment_method"];
          store_id?: parameters["rowFilter.transactions.store_id"];
        };
        body: {
          /** transactions */
          transactions?: definitions["transactions"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/stores": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.stores.id"];
          name?: parameters["rowFilter.stores.name"];
          created_at?: parameters["rowFilter.stores.created_at"];
          is_default?: parameters["rowFilter.stores.is_default"];
          description?: parameters["rowFilter.stores.description"];
          profile_id?: parameters["rowFilter.stores.profile_id"];
          secret?: parameters["rowFilter.stores.secret"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["stores"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** stores */
          stores?: definitions["stores"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.stores.id"];
          name?: parameters["rowFilter.stores.name"];
          created_at?: parameters["rowFilter.stores.created_at"];
          is_default?: parameters["rowFilter.stores.is_default"];
          description?: parameters["rowFilter.stores.description"];
          profile_id?: parameters["rowFilter.stores.profile_id"];
          secret?: parameters["rowFilter.stores.secret"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.stores.id"];
          name?: parameters["rowFilter.stores.name"];
          created_at?: parameters["rowFilter.stores.created_at"];
          is_default?: parameters["rowFilter.stores.is_default"];
          description?: parameters["rowFilter.stores.description"];
          profile_id?: parameters["rowFilter.stores.profile_id"];
          secret?: parameters["rowFilter.stores.secret"];
        };
        body: {
          /** stores */
          stores?: definitions["stores"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/websites": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.websites.id"];
          created_at?: parameters["rowFilter.websites.created_at"];
          fqdn?: parameters["rowFilter.websites.fqdn"];
          profile_id?: parameters["rowFilter.websites.profile_id"];
          metadata?: parameters["rowFilter.websites.metadata"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["websites"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** websites */
          websites?: definitions["websites"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.websites.id"];
          created_at?: parameters["rowFilter.websites.created_at"];
          fqdn?: parameters["rowFilter.websites.fqdn"];
          profile_id?: parameters["rowFilter.websites.profile_id"];
          metadata?: parameters["rowFilter.websites.metadata"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.websites.id"];
          created_at?: parameters["rowFilter.websites.created_at"];
          fqdn?: parameters["rowFilter.websites.fqdn"];
          profile_id?: parameters["rowFilter.websites.profile_id"];
          metadata?: parameters["rowFilter.websites.metadata"];
        };
        body: {
          /** websites */
          websites?: definitions["websites"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/profiles": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          created_at?: parameters["rowFilter.profiles.created_at"];
          user_id?: parameters["rowFilter.profiles.user_id"];
          avatar_url?: parameters["rowFilter.profiles.avatar_url"];
          username?: parameters["rowFilter.profiles.username"];
          pin?: parameters["rowFilter.profiles.pin"];
          secret?: parameters["rowFilter.profiles.secret"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["profiles"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** profiles */
          profiles?: definitions["profiles"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          created_at?: parameters["rowFilter.profiles.created_at"];
          user_id?: parameters["rowFilter.profiles.user_id"];
          avatar_url?: parameters["rowFilter.profiles.avatar_url"];
          username?: parameters["rowFilter.profiles.username"];
          pin?: parameters["rowFilter.profiles.pin"];
          secret?: parameters["rowFilter.profiles.secret"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          created_at?: parameters["rowFilter.profiles.created_at"];
          user_id?: parameters["rowFilter.profiles.user_id"];
          avatar_url?: parameters["rowFilter.profiles.avatar_url"];
          username?: parameters["rowFilter.profiles.username"];
          pin?: parameters["rowFilter.profiles.pin"];
          secret?: parameters["rowFilter.profiles.secret"];
        };
        body: {
          /** profiles */
          profiles?: definitions["profiles"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/orders": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.orders.id"];
          created_at?: parameters["rowFilter.orders.created_at"];
          store_id?: parameters["rowFilter.orders.store_id"];
          fullfiled?: parameters["rowFilter.orders.fullfiled"];
          cancelled?: parameters["rowFilter.orders.cancelled"];
          user_id?: parameters["rowFilter.orders.user_id"];
          mobile_number?: parameters["rowFilter.orders.mobile_number"];
          discount?: parameters["rowFilter.orders.discount"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["orders"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** orders */
          orders?: definitions["orders"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.orders.id"];
          created_at?: parameters["rowFilter.orders.created_at"];
          store_id?: parameters["rowFilter.orders.store_id"];
          fullfiled?: parameters["rowFilter.orders.fullfiled"];
          cancelled?: parameters["rowFilter.orders.cancelled"];
          user_id?: parameters["rowFilter.orders.user_id"];
          mobile_number?: parameters["rowFilter.orders.mobile_number"];
          discount?: parameters["rowFilter.orders.discount"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.orders.id"];
          created_at?: parameters["rowFilter.orders.created_at"];
          store_id?: parameters["rowFilter.orders.store_id"];
          fullfiled?: parameters["rowFilter.orders.fullfiled"];
          cancelled?: parameters["rowFilter.orders.cancelled"];
          user_id?: parameters["rowFilter.orders.user_id"];
          mobile_number?: parameters["rowFilter.orders.mobile_number"];
          discount?: parameters["rowFilter.orders.discount"];
        };
        body: {
          /** orders */
          orders?: definitions["orders"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/order_items": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.order_items.id"];
          created_at?: parameters["rowFilter.order_items.created_at"];
          item_id?: parameters["rowFilter.order_items.item_id"];
          order_id?: parameters["rowFilter.order_items.order_id"];
          qty?: parameters["rowFilter.order_items.qty"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["order_items"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** order_items */
          order_items?: definitions["order_items"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.order_items.id"];
          created_at?: parameters["rowFilter.order_items.created_at"];
          item_id?: parameters["rowFilter.order_items.item_id"];
          order_id?: parameters["rowFilter.order_items.order_id"];
          qty?: parameters["rowFilter.order_items.qty"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.order_items.id"];
          created_at?: parameters["rowFilter.order_items.created_at"];
          item_id?: parameters["rowFilter.order_items.item_id"];
          order_id?: parameters["rowFilter.order_items.order_id"];
          qty?: parameters["rowFilter.order_items.qty"];
        };
        body: {
          /** order_items */
          order_items?: definitions["order_items"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/items": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.items.id"];
          created_at?: parameters["rowFilter.items.created_at"];
          name?: parameters["rowFilter.items.name"];
          count?: parameters["rowFilter.items.count"];
          store_id?: parameters["rowFilter.items.store_id"];
          category?: parameters["rowFilter.items.category"];
          price?: parameters["rowFilter.items.price"];
          sale_price?: parameters["rowFilter.items.sale_price"];
          description?: parameters["rowFilter.items.description"];
          availability?: parameters["rowFilter.items.availability"];
          condition?: parameters["rowFilter.items.condition"];
          currency?: parameters["rowFilter.items.currency"];
          brand?: parameters["rowFilter.items.brand"];
          google_product_category?: parameters["rowFilter.items.google_product_category"];
          gender?: parameters["rowFilter.items.gender"];
          color?: parameters["rowFilter.items.color"];
          size?: parameters["rowFilter.items.size"];
          age_group?: parameters["rowFilter.items.age_group"];
          material?: parameters["rowFilter.items.material"];
          expiration_date?: parameters["rowFilter.items.expiration_date"];
          link?: parameters["rowFilter.items.link"];
          /** Whether to list item in catalog  or not. */
          list_in_catalog?: parameters["rowFilter.items.list_in_catalog"];
          /** Item buying price */
          buying_price?: parameters["rowFilter.items.buying_price"];
          unit?: parameters["rowFilter.items.unit"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["items"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** items */
          items?: definitions["items"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.items.id"];
          created_at?: parameters["rowFilter.items.created_at"];
          name?: parameters["rowFilter.items.name"];
          count?: parameters["rowFilter.items.count"];
          store_id?: parameters["rowFilter.items.store_id"];
          category?: parameters["rowFilter.items.category"];
          price?: parameters["rowFilter.items.price"];
          sale_price?: parameters["rowFilter.items.sale_price"];
          description?: parameters["rowFilter.items.description"];
          availability?: parameters["rowFilter.items.availability"];
          condition?: parameters["rowFilter.items.condition"];
          currency?: parameters["rowFilter.items.currency"];
          brand?: parameters["rowFilter.items.brand"];
          google_product_category?: parameters["rowFilter.items.google_product_category"];
          gender?: parameters["rowFilter.items.gender"];
          color?: parameters["rowFilter.items.color"];
          size?: parameters["rowFilter.items.size"];
          age_group?: parameters["rowFilter.items.age_group"];
          material?: parameters["rowFilter.items.material"];
          expiration_date?: parameters["rowFilter.items.expiration_date"];
          link?: parameters["rowFilter.items.link"];
          /** Whether to list item in catalog  or not. */
          list_in_catalog?: parameters["rowFilter.items.list_in_catalog"];
          /** Item buying price */
          buying_price?: parameters["rowFilter.items.buying_price"];
          unit?: parameters["rowFilter.items.unit"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.items.id"];
          created_at?: parameters["rowFilter.items.created_at"];
          name?: parameters["rowFilter.items.name"];
          count?: parameters["rowFilter.items.count"];
          store_id?: parameters["rowFilter.items.store_id"];
          category?: parameters["rowFilter.items.category"];
          price?: parameters["rowFilter.items.price"];
          sale_price?: parameters["rowFilter.items.sale_price"];
          description?: parameters["rowFilter.items.description"];
          availability?: parameters["rowFilter.items.availability"];
          condition?: parameters["rowFilter.items.condition"];
          currency?: parameters["rowFilter.items.currency"];
          brand?: parameters["rowFilter.items.brand"];
          google_product_category?: parameters["rowFilter.items.google_product_category"];
          gender?: parameters["rowFilter.items.gender"];
          color?: parameters["rowFilter.items.color"];
          size?: parameters["rowFilter.items.size"];
          age_group?: parameters["rowFilter.items.age_group"];
          material?: parameters["rowFilter.items.material"];
          expiration_date?: parameters["rowFilter.items.expiration_date"];
          link?: parameters["rowFilter.items.link"];
          /** Whether to list item in catalog  or not. */
          list_in_catalog?: parameters["rowFilter.items.list_in_catalog"];
          /** Item buying price */
          buying_price?: parameters["rowFilter.items.buying_price"];
          unit?: parameters["rowFilter.items.unit"];
        };
        body: {
          /** items */
          items?: definitions["items"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/customers": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.customers.id"];
          created_at?: parameters["rowFilter.customers.created_at"];
          email?: parameters["rowFilter.customers.email"];
          phone_number1?: parameters["rowFilter.customers.phone_number1"];
          phone_number2?: parameters["rowFilter.customers.phone_number2"];
          address1?: parameters["rowFilter.customers.address1"];
          address2?: parameters["rowFilter.customers.address2"];
          first_name?: parameters["rowFilter.customers.first_name"];
          last_name?: parameters["rowFilter.customers.last_name"];
          unique_name?: parameters["rowFilter.customers.unique_name"];
          company?: parameters["rowFilter.customers.company"];
          note?: parameters["rowFilter.customers.note"];
          store_id?: parameters["rowFilter.customers.store_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["customers"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** customers */
          customers?: definitions["customers"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.customers.id"];
          created_at?: parameters["rowFilter.customers.created_at"];
          email?: parameters["rowFilter.customers.email"];
          phone_number1?: parameters["rowFilter.customers.phone_number1"];
          phone_number2?: parameters["rowFilter.customers.phone_number2"];
          address1?: parameters["rowFilter.customers.address1"];
          address2?: parameters["rowFilter.customers.address2"];
          first_name?: parameters["rowFilter.customers.first_name"];
          last_name?: parameters["rowFilter.customers.last_name"];
          unique_name?: parameters["rowFilter.customers.unique_name"];
          company?: parameters["rowFilter.customers.company"];
          note?: parameters["rowFilter.customers.note"];
          store_id?: parameters["rowFilter.customers.store_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.customers.id"];
          created_at?: parameters["rowFilter.customers.created_at"];
          email?: parameters["rowFilter.customers.email"];
          phone_number1?: parameters["rowFilter.customers.phone_number1"];
          phone_number2?: parameters["rowFilter.customers.phone_number2"];
          address1?: parameters["rowFilter.customers.address1"];
          address2?: parameters["rowFilter.customers.address2"];
          first_name?: parameters["rowFilter.customers.first_name"];
          last_name?: parameters["rowFilter.customers.last_name"];
          unique_name?: parameters["rowFilter.customers.unique_name"];
          company?: parameters["rowFilter.customers.company"];
          note?: parameters["rowFilter.customers.note"];
          store_id?: parameters["rowFilter.customers.store_id"];
        };
        body: {
          /** customers */
          customers?: definitions["customers"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/categories": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.categories.id"];
          created_at?: parameters["rowFilter.categories.created_at"];
          name?: parameters["rowFilter.categories.name"];
          store_id?: parameters["rowFilter.categories.store_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["categories"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** categories */
          categories?: definitions["categories"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.categories.id"];
          created_at?: parameters["rowFilter.categories.created_at"];
          name?: parameters["rowFilter.categories.name"];
          store_id?: parameters["rowFilter.categories.store_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.categories.id"];
          created_at?: parameters["rowFilter.categories.created_at"];
          name?: parameters["rowFilter.categories.name"];
          store_id?: parameters["rowFilter.categories.store_id"];
        };
        body: {
          /** categories */
          categories?: definitions["categories"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  employees: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `stores.id`.<fk table='stores' column='id'/>
     */
    store_id: number;
    /** Format: numeric */
    pin?: number;
    /** Format: character varying */
    name?: string;
    /**
     * Format: boolean
     * @default true
     */
    is_active?: boolean;
  };
  items_out: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    date_out?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `items.id`.<fk table='items' column='id'/>
     */
    item_id: number;
    /** Format: numeric */
    count?: number;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `transactions.id`.<fk table='transactions' column='id'/>
     */
    transaction?: number;
    /** Format: numeric */
    amount?: number;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `employees.id`.<fk table='employees' column='id'/>
     */
    employee_id?: number;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `stores.id`.<fk table='stores' column='id'/>
     */
    store_id: number;
  };
  item_images: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    image_url?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `items.id`.<fk table='items' column='id'/>
     */
    item_id?: number;
  };
  /** @description item selling units */
  units: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: text */
    name: string;
    /** Format: text */
    description?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `stores.id`.<fk table='stores' column='id'/>
     */
    store_id?: number;
  };
  items_in: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    date_in?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `items.id`.<fk table='items' column='id'/>
     */
    item_id: number;
    /** Format: numeric */
    count?: number;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `stores.id`.<fk table='stores' column='id'/>
     */
    store_id: number;
  };
  transactions: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `customers.id`.<fk table='customers' column='id'/>
     */
    customer?: number;
    /** Format: numeric */
    discount?: number;
    /**
     * Format: text
     * @default cash
     */
    payment_method?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `stores.id`.<fk table='stores' column='id'/>
     */
    store_id: number;
  };
  stores: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: text */
    name?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: boolean
     * @default false
     */
    is_default?: boolean;
    /** Format: character varying */
    description?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    profile_id?: number;
    /**
     * Format: uuid
     * @default extensions.uuid_generate_v4()
     */
    secret: string;
  };
  websites: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    fqdn?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    profile_id?: number;
    /** Format: json */
    metadata?: unknown;
  };
  profiles: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: uuid */
    user_id: string;
    /** Format: character varying */
    avatar_url?: string;
    /** Format: character varying */
    username?: string;
    /** Format: numeric */
    pin?: number;
    /**
     * Format: uuid
     * @default extensions.uuid_generate_v4()
     */
    secret?: string;
  };
  orders: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `stores.id`.<fk table='stores' column='id'/>
     */
    store_id: number;
    /** Format: boolean */
    fullfiled?: boolean;
    /** Format: boolean */
    cancelled?: boolean;
    /** Format: uuid */
    user_id?: string;
    /** Format: character varying */
    mobile_number: string;
    /** Format: numeric */
    discount?: number;
  };
  order_items: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `items.id`.<fk table='items' column='id'/>
     */
    item_id?: number;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `orders.id`.<fk table='orders' column='id'/>
     */
    order_id?: number;
    /** Format: numeric */
    qty?: number;
  };
  items: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: text */
    name: string;
    /** Format: numeric */
    count?: number;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `stores.id`.<fk table='stores' column='id'/>
     */
    store_id: number;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `categories.id`.<fk table='categories' column='id'/>
     */
    category?: number;
    /** Format: numeric */
    price?: number;
    /** Format: numeric */
    sale_price?: number;
    /** Format: character varying */
    description?: string;
    /** Format: text */
    availability?: string;
    /** Format: text */
    condition?: string;
    /** Format: text */
    currency?: string;
    /** Format: text */
    brand?: string;
    /** Format: character varying */
    google_product_category?: string;
    /** Format: text */
    gender?: string;
    /** Format: text */
    color?: string;
    /** Format: text */
    size?: string;
    /** Format: text */
    age_group?: string;
    /** Format: text */
    material?: string;
    /** Format: timestamp with time zone */
    expiration_date?: string;
    /** Format: character varying */
    link?: string;
    /**
     * Format: boolean
     * @description Whether to list item in catalog  or not.
     * @default true
     */
    list_in_catalog?: boolean;
    /**
     * Format: numeric
     * @description Item buying price
     */
    buying_price?: number;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `units.id`.<fk table='units' column='id'/>
     */
    unit?: number;
  };
  customers: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    email?: string;
    /** Format: character varying */
    phone_number1?: string;
    /** Format: character varying */
    phone_number2?: string;
    /** Format: text */
    address1?: string;
    /** Format: text */
    address2?: string;
    /** Format: text */
    first_name?: string;
    /** Format: text */
    last_name?: string;
    /** Format: character varying */
    unique_name: string;
    /** Format: text */
    company?: string;
    /** Format: text */
    note?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `stores.id`.<fk table='stores' column='id'/>
     */
    store_id: number;
  };
  categories: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: text */
    name: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `stores.id`.<fk table='stores' column='id'/>
     */
    store_id: number;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description employees */
  "body.employees": definitions["employees"];
  /** Format: bigint */
  "rowFilter.employees.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.employees.created_at": string;
  /** Format: bigint */
  "rowFilter.employees.store_id": string;
  /** Format: numeric */
  "rowFilter.employees.pin": string;
  /** Format: character varying */
  "rowFilter.employees.name": string;
  /** Format: boolean */
  "rowFilter.employees.is_active": string;
  /** @description items_out */
  "body.items_out": definitions["items_out"];
  /** Format: bigint */
  "rowFilter.items_out.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.items_out.date_out": string;
  /** Format: bigint */
  "rowFilter.items_out.item_id": string;
  /** Format: numeric */
  "rowFilter.items_out.count": string;
  /** Format: bigint */
  "rowFilter.items_out.transaction": string;
  /** Format: numeric */
  "rowFilter.items_out.amount": string;
  /** Format: bigint */
  "rowFilter.items_out.employee_id": string;
  /** Format: bigint */
  "rowFilter.items_out.store_id": string;
  /** @description item_images */
  "body.item_images": definitions["item_images"];
  /** Format: bigint */
  "rowFilter.item_images.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.item_images.created_at": string;
  /** Format: character varying */
  "rowFilter.item_images.image_url": string;
  /** Format: bigint */
  "rowFilter.item_images.item_id": string;
  /** @description units */
  "body.units": definitions["units"];
  /** Format: bigint */
  "rowFilter.units.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.units.created_at": string;
  /** Format: text */
  "rowFilter.units.name": string;
  /** Format: text */
  "rowFilter.units.description": string;
  /** Format: bigint */
  "rowFilter.units.store_id": string;
  /** @description items_in */
  "body.items_in": definitions["items_in"];
  /** Format: bigint */
  "rowFilter.items_in.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.items_in.date_in": string;
  /** Format: bigint */
  "rowFilter.items_in.item_id": string;
  /** Format: numeric */
  "rowFilter.items_in.count": string;
  /** Format: bigint */
  "rowFilter.items_in.store_id": string;
  /** @description transactions */
  "body.transactions": definitions["transactions"];
  /** Format: bigint */
  "rowFilter.transactions.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.transactions.created_at": string;
  /** Format: bigint */
  "rowFilter.transactions.customer": string;
  /** Format: numeric */
  "rowFilter.transactions.discount": string;
  /** Format: text */
  "rowFilter.transactions.payment_method": string;
  /** Format: bigint */
  "rowFilter.transactions.store_id": string;
  /** @description stores */
  "body.stores": definitions["stores"];
  /** Format: bigint */
  "rowFilter.stores.id": string;
  /** Format: text */
  "rowFilter.stores.name": string;
  /** Format: timestamp with time zone */
  "rowFilter.stores.created_at": string;
  /** Format: boolean */
  "rowFilter.stores.is_default": string;
  /** Format: character varying */
  "rowFilter.stores.description": string;
  /** Format: bigint */
  "rowFilter.stores.profile_id": string;
  /** Format: uuid */
  "rowFilter.stores.secret": string;
  /** @description websites */
  "body.websites": definitions["websites"];
  /** Format: bigint */
  "rowFilter.websites.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.websites.created_at": string;
  /** Format: character varying */
  "rowFilter.websites.fqdn": string;
  /** Format: bigint */
  "rowFilter.websites.profile_id": string;
  /** Format: json */
  "rowFilter.websites.metadata": string;
  /** @description profiles */
  "body.profiles": definitions["profiles"];
  /** Format: bigint */
  "rowFilter.profiles.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.profiles.created_at": string;
  /** Format: uuid */
  "rowFilter.profiles.user_id": string;
  /** Format: character varying */
  "rowFilter.profiles.avatar_url": string;
  /** Format: character varying */
  "rowFilter.profiles.username": string;
  /** Format: numeric */
  "rowFilter.profiles.pin": string;
  /** Format: uuid */
  "rowFilter.profiles.secret": string;
  /** @description orders */
  "body.orders": definitions["orders"];
  /** Format: bigint */
  "rowFilter.orders.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.orders.created_at": string;
  /** Format: bigint */
  "rowFilter.orders.store_id": string;
  /** Format: boolean */
  "rowFilter.orders.fullfiled": string;
  /** Format: boolean */
  "rowFilter.orders.cancelled": string;
  /** Format: uuid */
  "rowFilter.orders.user_id": string;
  /** Format: character varying */
  "rowFilter.orders.mobile_number": string;
  /** Format: numeric */
  "rowFilter.orders.discount": string;
  /** @description order_items */
  "body.order_items": definitions["order_items"];
  /** Format: bigint */
  "rowFilter.order_items.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.order_items.created_at": string;
  /** Format: bigint */
  "rowFilter.order_items.item_id": string;
  /** Format: bigint */
  "rowFilter.order_items.order_id": string;
  /** Format: numeric */
  "rowFilter.order_items.qty": string;
  /** @description items */
  "body.items": definitions["items"];
  /** Format: bigint */
  "rowFilter.items.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.items.created_at": string;
  /** Format: text */
  "rowFilter.items.name": string;
  /** Format: numeric */
  "rowFilter.items.count": string;
  /** Format: bigint */
  "rowFilter.items.store_id": string;
  /** Format: bigint */
  "rowFilter.items.category": string;
  /** Format: numeric */
  "rowFilter.items.price": string;
  /** Format: numeric */
  "rowFilter.items.sale_price": string;
  /** Format: character varying */
  "rowFilter.items.description": string;
  /** Format: text */
  "rowFilter.items.availability": string;
  /** Format: text */
  "rowFilter.items.condition": string;
  /** Format: text */
  "rowFilter.items.currency": string;
  /** Format: text */
  "rowFilter.items.brand": string;
  /** Format: character varying */
  "rowFilter.items.google_product_category": string;
  /** Format: text */
  "rowFilter.items.gender": string;
  /** Format: text */
  "rowFilter.items.color": string;
  /** Format: text */
  "rowFilter.items.size": string;
  /** Format: text */
  "rowFilter.items.age_group": string;
  /** Format: text */
  "rowFilter.items.material": string;
  /** Format: timestamp with time zone */
  "rowFilter.items.expiration_date": string;
  /** Format: character varying */
  "rowFilter.items.link": string;
  /**
   * Format: boolean
   * @description Whether to list item in catalog  or not.
   */
  "rowFilter.items.list_in_catalog": string;
  /**
   * Format: numeric
   * @description Item buying price
   */
  "rowFilter.items.buying_price": string;
  /** Format: bigint */
  "rowFilter.items.unit": string;
  /** @description customers */
  "body.customers": definitions["customers"];
  /** Format: bigint */
  "rowFilter.customers.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.customers.created_at": string;
  /** Format: character varying */
  "rowFilter.customers.email": string;
  /** Format: character varying */
  "rowFilter.customers.phone_number1": string;
  /** Format: character varying */
  "rowFilter.customers.phone_number2": string;
  /** Format: text */
  "rowFilter.customers.address1": string;
  /** Format: text */
  "rowFilter.customers.address2": string;
  /** Format: text */
  "rowFilter.customers.first_name": string;
  /** Format: text */
  "rowFilter.customers.last_name": string;
  /** Format: character varying */
  "rowFilter.customers.unique_name": string;
  /** Format: text */
  "rowFilter.customers.company": string;
  /** Format: text */
  "rowFilter.customers.note": string;
  /** Format: bigint */
  "rowFilter.customers.store_id": string;
  /** @description categories */
  "body.categories": definitions["categories"];
  /** Format: bigint */
  "rowFilter.categories.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.categories.created_at": string;
  /** Format: text */
  "rowFilter.categories.name": string;
  /** Format: bigint */
  "rowFilter.categories.store_id": string;
}

export interface operations {}

export interface external {}
